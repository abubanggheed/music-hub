{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/tableReducer.js","redux/reducers/infoReducer.js","redux/reducers/urlReducer.js","redux/reducers/downloadReducer.js","redux/reducers/messagesReducer.js","redux/reducers/notificationsReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/projectSaga.js","config.js","redux/sagas/songSaga.js","redux/sagas/urlSaga.js","redux/sagas/notificationSaga.js","redux/sagas/index.js","components/LogOutButton/LogOutButton.js","components/Footer/Footer.js","components/Nav/Nav.js","components/LinkButtons/AnonymousButton.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/UserPage/UserPage.js","components/InfoPage/InfoPage.js","components/LinkButtons/ProjectButton.js","components/LinkButtons/PlayButton.js","components/Tables/ProjectTable.js","components/LinkButtons/NewProjectButton.js","components/MyProjects/MyProjects.js","components/Tables/SongTable.js","components/MySongs/MySongs.js","components/Tables/ExploreTable.js","components/Explore/Explore.js","components/ProjectForm/ProjectForm.js","components/DownloadFooter/DownloadFooter.js","components/Tables/PageTable.js","components/ProjectPage/ProjectPage.js","components/ActiveAudio/ActiveAudio.js","components/Dialogs/UploadDialog.js","components/Dialogs/DownloadDialog.js","components/Dialogs/DeleteProjectDialog.js","components/Dialogs/LoginDialog.js","components/Dialogs/RegisterDialog.js","components/Dialogs/AllDialogs.js","components/NotificationPage/NotificationPage.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","userReducer","action","payload","tableReducer","infoReducer","urlReducer","downloadReducer","Object","objectSpread","download","next","current","uploading","uploadingComplete","uploadError","downloading","downloadError","projectDeleting","projectDeletingComplete","projectDeletingError","loginError","registrationError","downloadingComplete","notificationsReducer","rootReducer","errors","user","table","info","url","messages","notifications","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","dispatch","headers","Content-Type","withCredentials","axios","post","this","props","t0","console","log","response","status","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","put","data","userSaga_marked","userSaga_marked2","userProjects","projects","addProject","getInfo","fixHead","removeProject","apiRemoveProject","projectSaga","projectSaga_marked","projectSaga_marked2","name","projectSaga_marked3","_context4","_marked4","_context5","_marked5","_context6","id","project_id","_marked6","_context7","delete","_marked7","_context8","_marked8","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","userSongs","projectSongs","addSong","promoteSong","removeSong","songSaga","storeSong","song","db","storage","ref","path","Date","child","then","snapshot","task","location_","path_","deleteSongs","urls","Promise","all","map","songSaga_marked","songSaga_marked2","refs","mp3","wav","production","songSaga_marked3","method","params","project","songSaga_marked4","filter","songSaga_marked5","songSaga_marked6","urlAvailability","urlGet","playGet","urlSaga","getdownloadUrl","getDownloadURL","availibility","urlSaga_marked","downloadUrl","urlSaga_marked2","urlSaga_marked3","urlSaga_marked4","getNotifications","deleteNotification","clearNotifications","uploadNotification","notificationSaga","notificationSaga_marked","notificationSaga_marked2","notificationSaga_marked3","notificationSaga_marked4","notificationSaga_marked5","rootSaga","sagas_marked","connect","react_default","createElement","className","onClick","icons_index_es","Footer","history","push","Component","withRouter","Link","to","index_es","Fragment","concat","components_LogOutButton_LogOutButton","components_Footer_Footer","AnonymousButton","handleClick","_this","variant","color","LoginPage","username","password","login","event","preventDefault","handleInputChangeFor","propertyName","setState","defineProperty","target","value","_this2","onSubmit","htmlFor","onChange","LinkButtons_AnonymousButton","RegisterPage","email","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","AboutPage","UserPage","logout","InfoPage","href","ProjectButton","page","PlayButton","handlePlay","ProjectTable","confirmDelete","projectToDelete","handleDelete","handleCancel","handleDeleteButton","key","number","head","LinkButtons_PlayButton","LinkButtons_ProjectButton","open","MyProjects","Tables_ProjectTable","NewProjectButton","SongTable","manage","handleManage","handleClose","user_id","handleChange","includes","MySongs","Tables_SongTable","artist","versions","Explore","ExploreTable","ProjectForm","projectName","handleSubmit","placeholder","required","_ref","rel","downloadDialog","handleChoose","handleDownload","handleFile","file","owner","mp3Status","wavStatus","productionStatus","components_DownloadFooter_DownloadFooter","ProjectPage","uploadDialog","newUpload","addRemix","cancleUpload","param","files","handleNameChange","accept","PageTable","controls","src","autoPlay","error","Dialogs","Dialogs_UploadDialog","Dialogs_DownloadDialog","Dialogs_DeleteProjectDialog","Dialogs_LoginDialog","Dialogs_RegisterDialog","NotificationPage","handleClear","disabled","notification","content","theme","createMuiTheme","typography","useNextVariants","palette","primary","lightBlue","secondary","blueGrey","deepPurple","App","styles","HashRouter","container","direction","sm","item","components_Nav_Nav","Switch","Redirect","exact","from","components_ProtectedRoute_ProtectedRoute","render","components_ActiveAudio_ActiveAudio","AllDialogs","sagaMiddleware","createSagaMiddleware","middlewareList","store","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b21adf53.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'You must enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Your username and password were considered and rejected. Try again.';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Something has broken. Please try again later.';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'You must choose username, password, and email!';\n    case 'REGISTRATION_FAILED':\n      return 'An existing user already has that username or email!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default userReducer;\n","const tableReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_TABLE':\n      return action.payload;\n    //the state in this reducer hold the current table\n    //that is shown on the dom, be it one of projects or songs\n    case 'CLEAR_TABLE':\n      return [];\n    default:\n      return state;\n  }\n};\n\nexport default tableReducer;","const infoReducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'SET_INFO':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default infoReducer;","const urlReducer = (state = {}, action) => {\n    switch (action.type) {\n      case 'SET_URLS':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  //this reducer holds boolean values for which downloads are available\n  \n  export default urlReducer;\n  ","const downloadReducer = (state = {}, action) => {\n    switch (action.type) {\n        case 'SET_DOWNLOAD':\n            return { ...state, download: action.payload };\n        case 'QUEUE_SONG':\n            return {...state, next: action.payload}\n        case 'FINISH_SONG':\n            return {...state, current: state.next}\n            //queue song and finish song are made this way so that in the future\n            //it will be possible to use this reducer to queue up the next song to\n            //be played in advance, without making getting it from the storage on the spot.\n        case 'CLEAR_DOWNLOAD':\n            return {...state, download: null}\n        default:\n            return state;\n    }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default downloadReducer;\n","const infoReducer = (state = {\n    uploading: false,\n    uploadingComplete: false,\n    uploadError: false,\n    downloading: false,\n    downloadError: false,\n    projectDeleting: false,\n    projectDeletingComplete: false,\n    projectDeletingError: false,\n    loginError: false,\n    registrationError: false,\n}, action) => {\n    //each component of state corresponds to a dialog that lives on app.js\n    //on actions that trigger this reducer open or close one of these dialogs\n    switch (action.type) {\n        case 'START_UPLOAD':\n            return {\n                ...state,\n                uploading: true,\n            };\n        case 'FINISH_UPLOAD':\n            return {\n                ...state,\n                uploading: false,\n                uploadingComplete: true,\n            }\n        case 'CONFIRM_UPLOAD':\n            return {\n                ...state,\n                uploadingComplete: false,\n            }\n        case 'UPLOAD_ERROR':\n            return {\n                ...state,\n                uploadError: true,\n            }\n        case 'CONFIRM_ERROR':\n            return {\n                ...state,\n                uploadError: false,\n            }\n        case 'START_DOWNLOAD':\n            return {\n                ...state,\n                downloading: true,\n            };\n        case 'FINISH_DOWNLOAD':\n            return {\n                ...state,\n                downloading: false,\n            }\n        case 'CONFIRM_DOWNLOAD':\n            return {\n                ...state,\n                downloadingComplete: false,\n            }\n        case 'DOWNLOAD_ERROR':\n            return {\n                ...state,\n                downloadError: true,\n            }\n        case 'CONFIRM_DOWNLOAD_ERROR':\n            return {\n                ...state,\n                downloadError: false,\n            }\n        case 'START_PROJECT_DELETE':\n            return {\n                ...state,\n                projectDeleting: true,\n            };\n        case 'PROJECT_CONFIRM_DELETE':\n            return {\n                ...state,\n                projectDeleting: false,\n                projectDeletingComplete: true,\n            }\n        case 'PROJECT_FINISH_DELETE':\n            return {\n                ...state,\n                projectDeletingComplete: false,\n            }\n        case 'PROJECT_DELETE_ERROR':\n            return {\n                ...state,\n                projectDeletingError: true,\n            }\n        case 'PROJECT_CONFIRM_ERROR':\n            return {\n                ...state,\n                projectDeletingError: false,\n            }\n        case 'CLEAR_LOGIN_ERROR':\n            return {\n                ...state,\n                loginError: false,\n            }\n        case 'OPEN_LOGIN_ERROR':\n            return {\n                ...state,\n                loginError: true,\n            }\n        case 'CLEAR_REGISTRATION_ERROR':\n            return {\n                ...state,\n                registrationError: false,\n            }\n        case 'OPEN_REGISTRATION_ERROR':\n            return {\n                ...state,\n                registrationError: true,\n            }\n        default:\n            return state;\n    }\n};\n\n// user will be on the redux state at:\n// state.user\nexport default infoReducer;","const notificationsReducer = (state = [], action) => {\n    switch (action.type) {\n      case 'SET_NOTIFICATIONS':\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default notificationsReducer;","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport table from './tableReducer';\nimport info from './infoReducer';\nimport url from './urlReducer';\nimport download from './downloadReducer';\nimport messages from './messagesReducer';\nimport notifications from './notificationsReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  table, //will have an array of all items to make a table out of\n  info, //will have some information about a particular project\n  url, //will hold urls for available downloads\n  download, //will hold the download url for the current download, and currently playing audio\n  messages, //will hold values to determine which dialog is open\n  notifications, //will hold values that show up on the notifications page\n});\n\nexport default rootReducer;\n","import { put as dispatch, takeLatest } from 'redux-saga/effects';\n//put is imported as dispatch since \"dispatch\" describes what put does\n//better than \"put\"\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield dispatch({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get notifications for later\n    this.props.dispatch({ type: 'GET_NOTIFICATIONS' });\n    // get the user information from the server\n    yield dispatch({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    if (error.response.status === 401) {\n      yield dispatch({ type: 'OPEN_LOGIN_ERROR' });\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield dispatch({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield dispatch({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield dispatch({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put as dispatch, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // clear any existing error on the registration page\n    yield dispatch({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield dispatch({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield dispatch({type: 'SET_TO_LOGIN_MODE'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      yield dispatch({ type: 'OPEN_REGISTRATION_ERROR' });\n      yield dispatch({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put as dispatch, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n//triggers on every action with .type = 'MY_PROJECTS', see projectSaga.\nfunction* userProjects(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    //save the response reguarding a user's projects as response\n    const response = yield axios.get('api/project/user/' + action.payload, config);\n    //dispatches a new action to change a reducer to have the user's projects as the table\n    yield dispatch({ type: 'SET_TABLE', payload: response.data });\n  } catch (error) {\n    console.log('Error with project gets:', error);\n    if (error.response.status === 403) {\n      yield dispatch({ type: 'FORBIDDEN_TABLE' });\n    } else {\n      yield dispatch({ type: 'FETCH_FAILED' });\n    }\n  }\n}\n\nfunction* projects(action) {\n  try {\n    //saves a response for all projects query as response\n    const response = yield axios.get('api/project');\n    //sets the table reducer for all projects\n    yield dispatch({ type: 'SET_TABLE', payload: response.data });\n  } catch (error) {\n    console.log('Error with project gets:', error);\n  }\n}\n\nfunction* addProject(action) {\n  try {\n    //post the data in action.payload in the project router.\n    yield axios.post('api/project', { name: action.payload.name });\n    //calls an action that will trigger userProjects\n    yield dispatch({ type: 'MY_PROJECTS', payload: action.payload.user})\n  } catch (error) {\n    console.log('Error with project posts:', error);\n  }\n}\n\nfunction* getInfo(action) {\n  try {\n    //optains the information about a particular project\n    const response = yield axios.get('api/project/info/' + action.payload);\n    //sets the info reducer to the response from the server\n    yield dispatch({ type: 'SET_INFO', payload: response.data[0] });\n  } catch (error) {\n    console.log('Error with project info:', error);\n  }\n}\n\nfunction* fixHead(action) {\n  try {\n    //sends a request to the server to verify that the project's head still exists.\n    yield axios.put('/api/project/head/' + action.payload);\n  } catch (error) {\n    console.log('Error fixing head:', error);\n  }\n}\n\nfunction* removeProject(action) {\n  try {\n    //the response here is an array of all songs in the project the user wishes to delete.\n    const response = yield axios.get('api/song/project/' + action.payload.id);\n    if(response.data.length > 0) {\n      //if there is at least one song, the first song is deleted via the removeSong generator\n      //in songSaga.js.\n      yield dispatch({ type: 'DELETE_SONG', payload: {\n         id: response.data[0].id,\n         project_id: action.payload.id,\n         next: action,\n        } });\n        //since removeSong dispatches the object in action.payload.next,\n        //removeProject is called recursively untill there are no more songs left\n        //under that project.\n    } else {\n      //if the project has no songs, an action that triggers apiRemoveProject is triggered instead.\n      yield dispatch({ type: 'DELETE_PROJECT_DB', payload: action.payload });\n    }\n  } catch (error) {\n    console.log('Error removing project:', error);\n  }\n}\n\nfunction* apiRemoveProject(action) {\n  try {\n    //the server is asked to delete the project\n    const response = yield axios.delete('api/project/' + action.payload.id);\n    if (response.status === 200){\n      //on success, userProjects is triggered again to uptain the updated table.\n      yield dispatch({ type: 'MY_PROJECTS', payload: action.payload.user });\n      yield dispatch({ type: 'PROJECT_CONFIRM_DELETE'});\n    }\n  } catch (error) {\n    console.log('could not get into database:', error);\n    yield dispatch({ type: 'PROJECT_DELETE_ERROR'});\n  }\n}\n\nfunction* projectSaga() {\n  yield takeLatest('MY_PROJECTS', userProjects);\n  yield takeLatest('PROJECTS', projects);\n  yield takeLatest('NEW_PROJECT', addProject);\n  yield takeLatest('PROJECT_INFO', getInfo);\n  yield takeLatest('FIX_HEAD', fixHead);\n  yield takeLatest('DELETE_PROJECT', removeProject);\n  yield takeLatest('DELETE_PROJECT_DB', apiRemoveProject);\n}\n\nexport default projectSaga;\n","import firebase from 'firebase/app';\nimport 'firebase/storage';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCMf6nKzEVxa1QOsmx7edThfGqVIvmayq8\",\n  authDomain: \"my-project-1539982235609.firebaseapp.com\",\n  databaseURL: \"https://my-project-1539982235609.firebaseio.com\",\n  projectId: \"my-project-1539982235609\",\n  storageBucket: \"my-project-1539982235609.appspot.com\",\n  messagingSenderId: \"921561837108\"\n});\n\n//here lies the configuration for the firebase storage dump this application\n//uses.\n\nexport default firebase;","import { put as dispatch, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport firebase from '../../config';\n\nconst config = {\n  headers: { 'Content-Type': 'application/json' },\n  withCredentials: true,\n};\n\nfunction storeSong(song) {\n  //the song is placed inside of firebase storage, and the path is returned\n  const db = firebase.storage().ref();\n  if (song) {\n    let path = '/songs/' + (+new Date()) + '-' + song[0].name;\n    return db.child(path).put(song[0]).then(snapshot => {\n      return snapshot.task.location_.path_;\n    });\n  }\n}\n\nfunction deleteSongs(urls) {\n  //all songs corresponding to an array of urls are deleted here.\n  const db = firebase.storage().ref();\n  return Promise.all(urls.map(url => {\n    let path = db.child(url);\n    return path.delete();\n    //the map function returns an array of promises, those promises are combined\n    //into one promise using Promise.all.\n  }));\n}\n\nfunction* userSongs(action) {\n  try {\n    //all songs that appear under my songs are obtained and sent on their way here.\n    const response = yield axios.get('api/song/mysongs/' + action.payload, config);\n    yield dispatch({ type: 'SET_TABLE', payload: response.data });\n  } catch (error) {\n    console.log('Error with getting songs:', error);\n    if (error.response.status === 403) {\n      yield dispatch({ type: 'FORBIDDEN_TABLE' });\n    } else {\n      yield dispatch({ type: 'FETCH_FAILED' });\n    }\n  }\n}\n\nfunction* projectSongs(action) {\n  try {\n    //obtains and sends songs ascociated with a certain project.\n    const response = yield axios.get('api/song/project/' + action.payload);\n    yield dispatch({ type: 'SET_TABLE', payload: response.data });\n  } catch (error) {\n    console.log('Error with getting songs:', error);\n  }\n}\n\nfunction* addSong(action) {\n  try {\n    //builds an object with all urls for a download.\n    let refs = {};\n    refs.mp3 = yield storeSong(action.payload.mp3);\n    refs.wav = yield storeSong(action.payload.wav);\n    refs.production = yield storeSong(action.payload.production);\n    //once the urls are returned from storeSong, the urls are posted to the server\n    yield axios.post('api/song/' + action.payload.project_id, { ...refs, name: action.payload.name });\n    //on complete, projectSongs is triggered to obtain an updated list.\n    yield dispatch({ type: 'PROJECT_SONGS', payload: action.payload.project_id });\n    //send a notification to the project creator that someone has uploaded a remix\n    yield dispatch({ type: 'UPLOAD_NOTIFICATION', payload: action.payload.project_id });\n    yield dispatch({ type: 'FINISH_UPLOAD' });\n  } catch (error) {\n    console.log('Error with adding song:', error);\n    yield dispatch({ type: 'UPLOAD_ERROR' });\n  }\n}\n\nfunction* promoteSong(action) {\n  try {\n    //set a chosed song to the head of the project.\n    yield axios({\n      method: 'PUT',\n      url: '/api/song/head',\n      params: {\n        ...action.payload\n      }\n    });\n    yield dispatch({ type: 'PROJECT_SONGS', payload: action.payload.project });\n  } catch (error) {\n    console.log('Error with promoting song:', error);\n  }\n}\n\nfunction* removeSong(action) {\n  try {\n    //the delete method called returns the urls that were removed from the database.\n    const response = yield axios({\n      method: 'DELETE',\n      url: '/api/song/' + action.payload.id\n    });\n    //an array of all non-null urls are passed to deleteSongs to be removed from the storage.\n    yield deleteSongs(response.data.filter(song => song !== null));\n    if (action.payload.type === 'head') {\n      //on deleting a head, the project's head must be updated.\n      yield dispatch({ type: 'FIX_HEAD', payload: action.payload.project_id });\n    }\n    //songs may be deleted in many different locations. To account for this,\n    //the payload has a next, which is an object to dispatch. This was made\n    //for getting the correct updated table of songs based on which view the\n    //user was on. It also helps in the recursive logic behind deleting a project.\n    yield dispatch(action.payload.next);\n  } catch (error) {\n    console.log('Error in song delete:', error);\n  }\n}\n\nfunction* songSaga() {\n  yield takeLatest('MY_SONGS', userSongs);\n  yield takeLatest('PROJECT_SONGS', projectSongs);\n  yield takeLatest('NEW_SONG', addSong);\n  yield takeLatest('PROMOTE_SONG', promoteSong);\n  yield takeLatest('DELETE_SONG', removeSong);\n}\n\nexport default songSaga;\n","import { put as dispatch, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\nimport firebase from '../../config';\n\nfunction getdownloadUrl (path){\n    //finds a single url from a single path to the storage.\n    const download = firebase.storage().ref(path);\n    return download.getDownloadURL().then(url => {\n        return url;\n    });\n}\n\nfunction* urlAvailability(action) {\n    try {\n        //sets the url reducer to store which downloads are available for a particular song.\n        const availibility = yield axios.get('api/url/available/' + action.payload);\n        yield dispatch({ type: 'SET_URLS', payload: availibility.data});\n    } catch (error) {\n        console.log('error getting url availability:', error);\n    }\n}\n\nfunction* urlGet(action) {\n    try {\n        yield dispatch({ type: 'START_DOWNLOAD' });\n        //the currently set download is cleared.\n        yield dispatch({ type: 'CLEAR_DOWNLOAD' });\n        const response = yield axios({\n            method: 'GET',\n            url: 'api/url/download',\n            params: {...action.payload}\n        });\n        //sets the active download to the correct url.\n        const downloadUrl = yield getdownloadUrl(response.data);\n        yield dispatch({ type: 'SET_DOWNLOAD', payload: downloadUrl });\n        yield dispatch({ type: 'FINISH_DOWNLOAD' });\n    } catch (error) {\n        console.log('error in download url:', error);\n    }\n}\n\nfunction* playGet(action) {\n    try {\n        const response = yield axios({\n            method: 'GET',\n            url: 'api/url/play',\n            params: {...action.payload}\n        });\n        //obtain one url (of the mp3) and get the download url from that.\n        const downloadUrl = yield getdownloadUrl(response.data);\n        yield dispatch({ type: 'QUEUE_SONG', payload: downloadUrl });\n        yield dispatch({ type: 'FINISH_SONG'});\n    } catch (error) {\n        console.log('error in getting mp3:', error);\n    }\n}\n\n\nfunction* urlSaga() {\n    yield takeLatest('GET_URLS', urlAvailability);\n    yield takeLatest('DOWNLOAD_URL', urlGet);\n    yield takeLatest('PLAY_SONG', playGet);\n}\n\nexport default urlSaga;\n","import { put as dispatch, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* getNotifications(action) {\n    try {\n        const response = yield axios.get('/api/notification');\n        yield dispatch({ type: 'SET_NOTIFICATIONS', payload: response.data });\n    } catch (error) {\n        console.log('error in getting notifications:', error);\n    }\n}\n\nfunction* deleteNotification(action) {\n    try {\n        yield axios.delete('/api/notification/one/' + action.payload);\n        yield dispatch({ type: 'GET_NOTIFICATIONS' });\n    } catch (error) {\n        console.log('error in deleting one notification:', error);\n    }\n}\n\nfunction* clearNotifications(action) {\n    try {\n        yield axios.delete('/api/notification/all');\n        yield dispatch({ type: 'GET_NOTIFICATIONS' });\n    } catch (error) {\n        console.log('error in clearing notifications:', error);\n    }\n}\n\nfunction* uploadNotification(action) {\n    try {\n        yield axios({\n            method: 'POST',\n            url: '/api/notification/upload/' + action.payload,\n        });\n    } catch (error) {\n        console.log('error in adding notification:', error);\n    }\n}\n\nfunction* notificationSaga() {\n    yield takeLatest('GET_NOTIFICATIONS', getNotifications);\n    yield takeLatest('DELETE_NOTIFICATION', deleteNotification);\n    yield takeLatest('CLEAR_NOTIFICATIONS', clearNotifications);\n    yield takeLatest('UPLOAD_NOTIFICATION', uploadNotification);\n}\n\nexport default notificationSaga;\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport projectSaga from './projectSaga';\nimport songSaga from './songSaga';\nimport urlSaga from './urlSaga';\nimport notificationSaga from './notificationSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    projectSaga(),\n    songSaga(),\n    urlSaga(),\n    notificationSaga(),\n  ]);\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { ExitToApp } from '@material-ui/icons';\n\nconst LogOutButton = props => (\n  <button\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    <ExitToApp />\n    Log Out\n  </button>\n);\n\nexport default connect()(LogOutButton);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport './Footer.css'\n\nclass Footer extends Component {\n\n  componentDidMount() {\n    this.props.history.push('/home');\n  }\n//the tables are set independant of the page, and don't refresh.\n//This component forces the user to return to their home page on refresh\n//so that they won't be confused as to where their table went.\n  render() {\n    return (\n      <footer>\n        <i>by abubanggheed</i>\n  </footer>\n    );\n  }\n}\n\nexport default withRouter(Footer);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { MenuItem } from '@material-ui/core';\nimport LogOutButton from '../LogOutButton/LogOutButton';\nimport Footer from '../Footer/Footer';\nimport { HomeOutlined, SearchSharp, InfoOutlined, PermDeviceInformation, FiberManualRecord, MusicVideo, NotesOutlined } from '@material-ui/icons'\nimport './Nav.css';\n\nconst Nav = (props) => (\n  <div className=\"nav\">\n    <Link to=\"/home\">\n      <h2 className=\"nav-title\">Music Hub</h2>\n    </Link>\n    <div>\n      <MenuItem>\n        <Link className=\"nav-link\" to=\"/home\">\n          <HomeOutlined />\n          {/* Show this link if they are logged in or not,\n        but call this link 'Home' if they are logged in,\n        and call this link 'Login / Register' if they are not */}\n          {props.user.id ? 'Home' : 'Login'}\n        </Link>\n      </MenuItem>\n      <MenuItem>\n        <Link className=\"nav-link\" to=\"/explore\">\n          <SearchSharp />\n          Explore\n        </Link>\n      </MenuItem>\n      <MenuItem>\n        <Link className=\"nav-link\" to=\"/info\">\n          <InfoOutlined />\n          Info\n        </Link>\n      </MenuItem>\n      <MenuItem>\n        <Link className=\"nav-link\" to=\"/about\">\n          <PermDeviceInformation />\n          About\n        </Link>\n      </MenuItem>\n      {props.user.id && (\n        <>\n          <MenuItem>\n            <Link className=\"nav-link\" to=\"/projects\">\n              <FiberManualRecord />\n              My Projects\n            </Link>\n          </MenuItem>\n          <MenuItem>\n            <Link className=\"nav-link\" to=\"/songs\">\n              <MusicVideo />\n              My Songs\n            </Link>\n          </MenuItem>\n          <MenuItem>\n            <Link className=\"nav-link\" to=\"/notifications\">\n              <NotesOutlined />\n              Notifications\n              {props.notifications.length > 0 && ` (${props.notifications.length})`}\n            </Link>\n          </MenuItem>\n          <MenuItem>\n            <LogOutButton className=\"nav-link\" />\n          </MenuItem>\n        </>\n      )}\n    </div>\n    <Footer />\n  </div>\n\n\n);\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  notifications: state.notifications,\n});\n\nexport default connect(mapStateToProps)(Nav);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from '@material-ui/core';\n\n\nclass AnonymousButton extends Component {\n\n//this button does the exact same thing as the explore link on the navbar\n    handleClick = () => {\n        this.props.dispatch({type: 'PROJECTS' });\n        this.props.history.push('/explore');\n    }\n\n    render() {\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClick}>Continue as Anonymous</Button>\n            </div>\n        );\n    }\n}\n\nexport default connect()(withRouter(AnonymousButton));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Button, Input, InputLabel } from '@material-ui/core';\nimport AnonymousButton from '../LinkButtons/AnonymousButton';\n\nclass LoginPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.login}>\n          <h1>Login</h1>\n          <div>\n            <InputLabel htmlFor=\"username\">\n              Username:\n              <Input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </InputLabel>\n          </div>\n          <div>\n            <InputLabel htmlFor=\"password\">\n              Password:\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </InputLabel>\n          </div>\n          <div>\n            <Input\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Log In\"\n              className=\"log-in\"\n            />\n          </div>\n        </form>\n        <center>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => { this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' }) }}\n          >\n            Register\n          </Button>\n          <pre>\n            <AnonymousButton />\n          </pre>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect()(LoginPage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, InputLabel, Button } from '@material-ui/core';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n    email: '',\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password && this.state.email) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n          email: this.state.email,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n      this.props.dispatch({ type: 'OPEN_REGISTRATION_ERROR' });\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <InputLabel htmlFor=\"username\">\n              Username:\n              <Input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </InputLabel>\n          </div>\n          <div>\n            <InputLabel htmlFor=\"password\">\n              Password:\n              <Input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </InputLabel>\n          </div>\n          <div>\n            <InputLabel htmlFor=\"email\">\n              Email:\n              <Input\n                type=\"email\"\n                name=\"email\"\n                value={this.state.email}\n                onChange={this.handleInputChangeFor('email')}\n              />\n            </InputLabel>\n          </div>\n          <div>\n            <Input\n              className=\"register\"\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n          </div>\n        </form>\n        <center>\n          <p>\n            Note: your email address will be ignored by this application except for special circumstances.\n          </p>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"link-button\"\n            onClick={() => { this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' }) }}\n          >\n            Login\n          </Button>\n        </center>\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the error messages.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({errors}) => ({ errors });\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React from 'react';\n\nconst AboutPage = () => (\n  <div>\n    <div>\n      <p>\n        Music Hub is a collaberative music project building site. Here you may\n        upload and download original musical content.\n      </p>\n      <p>\n        I encourage you to try and contribute to other peoples projects. This site\n        is not for showing off your skills, but exchanging ideas, no matter how small or\n        unfinished they may be.\n      </p>\n      <p>\n        I hope this site brings you many opportunities to juice your creativity!\n      </p>\n      <pre>\n        -- abubanggheed\n      </pre>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nclass UserPage extends Component {\n  logout = () => {\n    this.props.dispatch({ type: 'LOGOUT' });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"welcome\">\n          You are logged in, {this.props.user.username}!\n        </h1>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(UserPage);\n\n","import React from 'react';\n\nconst InfoPage = () => (\n  <div>\n    <p>\n      Greetings. By navigating to this site, you have defined yourself as a musician if you haven't already. Congradulations!\n    </p>\n    <p>\n      Please, if you have the time, find a project that appeals to your fancy, and make a remix.\n    </p>\n    <p>\n      Do note that anything you upload to this site is available for download by any user. Do not rely on this\n      site to hold or distribute personal projects as they may be coppied or manipulated by any person with a computer.\n    </p>\n    <p>\n      If you have an pressing issue with this site, post an issue here:\n      <a href=\"https://github.com/abubanggheed/music-hub/issues\"> https://github.com/abubanggheed/music-hub/issues </a>\n      If you also think you have the solution to that issue, feel free to address it yourself, as this is an open source website.\n      <a href=\"https://github.com/abubanggheed/music-hub\"> https://github.com/abubanggheed/music-hub</a>\n    </p>\n  </div>\n);\n\nexport default InfoPage;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport { SubdirectoryArrowLeftTwoTone } from '@material-ui/icons';\n\nclass ProjectButton extends Component {\n\n//this button brings the user to a specific project page, and triggers the \n//sagas needed to get the right table and information\n    handleClick = () => {\n        this.props.dispatch({type: 'CLEAR_TABLE', payload: this.props.page});\n        this.props.dispatch({type: 'PROJECT_SONGS', payload: this.props.page});\n        this.props.dispatch({type: 'PROJECT_INFO', payload: this.props.page});\n        this.props.history.push('/explore/' + this.props.page);\n    }\n\n    render() {\n        return (\n            <div>\n                <IconButton color=\"secondary\" onClick={this.handleClick}><SubdirectoryArrowLeftTwoTone /></IconButton>\n            </div>\n        );\n    }\n}\n\nexport default connect()(withRouter(ProjectButton));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport { PlayCircleOutline } from '@material-ui/icons';\n\n\nclass PlayButton extends Component {\n\n//this button exists almost everwhere, and triggers the process involved\n//with playing audio based on it's props\n    handlePlay = () => {\n        this.props.dispatch({ type: 'PLAY_SONG', payload: {\n            id: this.props.song.id,\n            type: 'mp3',\n        } });\n    }\n\n    render() {\n        return (\n                <IconButton color=\"primary\" onClick={this.handlePlay}><PlayCircleOutline /></IconButton>\n        );\n    }\n}\n\n\nexport default connect()(PlayButton);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProjectButton from '../LinkButtons/ProjectButton';\nimport { Table, TableHead, TableBody, TableRow, TableCell, IconButton, Dialog, Typography, Paper } from '@material-ui/core';\nimport { DeleteSweep, Save } from '@material-ui/icons';\nimport PlayButton from '../LinkButtons/PlayButton';\n\nclass ProjectTable extends Component {\n\n\n  state = {\n    confirmDelete: false,\n    projectToDelete: null,\n  }\n\n  handleDelete = () => {\n    this.props.dispatch({ type: 'START_PROJECT_DELETE' });\n    this.props.dispatch({ type: 'DELETE_PROJECT', payload: { id: this.state.projectToDelete.id, user: this.props.user.id } });\n    this.handleCancel();\n  }\n\n  handleDeleteButton = project => {\n    this.setState({\n      confirmDelete: true,\n      projectToDelete: project,\n    });\n  }\n\n  handleCancel = () => {\n    this.setState({\n      confirmDelete: false,\n      projectToDelete: null,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.table.length > 0 ?\n          <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Stored Versions</TableCell>\n                  <TableCell>Play Head</TableCell>\n                  <TableCell>Go</TableCell>\n                  <TableCell>Delete</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.props.table.map(project => (\n                  <TableRow key={project.id}>\n                    <TableCell>{project.name}</TableCell>\n                    <TableCell>{project.number}</TableCell>\n                    <TableCell>{project.head !== null && <PlayButton song={{ id: project.head }} />}</TableCell>\n                    <TableCell><ProjectButton page={project.id} /></TableCell>\n                    <TableCell><IconButton color=\"secondary\" onClick={() => this.handleDeleteButton(project)}><DeleteSweep /></IconButton></TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper> :\n          <div>\n            <p>\n              You currently have no projects.\n              </p>\n          </div>}\n\n        <Dialog open={this.state.confirmDelete}>\n          <Typography variant=\"h4\">Are you really going to delete an entire project?</Typography>\n          <Typography variant=\"body1\">Deleting a project deletes all songs within it.</Typography>\n          <IconButton color=\"primary\" onClick={this.handleCancel}><Save />Maybe Not</IconButton>\n          <IconButton color=\"secondary\" onClick={this.handleDelete}><DeleteSweep />I do what I have to</IconButton>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  table: state.table,\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(ProjectTable);","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { IconButton } from '@material-ui/core';\nimport { FolderOpenOutlined } from '@material-ui/icons';\n\nclass ProjectButton extends Component {\n\n//this button brings the user to the new project form\n    handleClick = () => {\n        this.props.history.push('/newProject');\n    }\n\n    render() {\n        return (\n            <div>\n                <IconButton onClick={this.handleClick}><FolderOpenOutlined /> New Project</IconButton>\n            </div>\n        );\n    }\n}\n\nexport default connect()(withRouter(ProjectButton));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Projects from '../Tables/ProjectTable';\nimport NewProject from '../LinkButtons/NewProjectButton';\n\nclass MyProjects extends Component {\n\n  componentDidMount() {\n    this.props.dispatch({type: 'MY_PROJECTS', payload: this.props.user.id});\n  }\n//this component displays all projects that the user created.\n  render() {\n    return (\n      <div>\n        <h1 className=\"welcome\">\n          { this.props.user.username }'s Projects\n        </h1>\n        <Projects />\n        <NewProject />{/* the new project button */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(MyProjects);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProjectButton from '../LinkButtons/ProjectButton';\nimport PlayButton from '../LinkButtons/PlayButton';\nimport { Dialog, Typography, Table, TableHead, TableBody, TableRow, TableCell, IconButton, Paper, Input, InputLabel } from '@material-ui/core';\nimport { ViewCarouselSharp, DeleteForever, Cancel } from '@material-ui/icons';\n\nclass SongTable extends Component {\n\n  state = {\n    manage: {\n      open: false,\n      song: null,\n    },\n    filter: '',\n  }\n\n  handleManage = song => {\n    this.setState({\n      ...this.state,\n      manage: {\n        song: song,\n        open: true,\n      },\n    });\n  }\n\n  handleClose = () => {\n    this.setState({\n      ...this.state,\n      manage: {\n        song: null,\n        open: false,\n      }\n    });\n  }\n\n  handleDelete = () => {\n    this.props.dispatch({\n      type: 'DELETE_SONG', payload: {\n        ...this.state.manage.song,\n        user_id: this.props.user.id,\n        next: { type: 'MY_SONGS', payload: this.props.user.id },\n      }//the next action triggers the saga that sets the table to the updated my songs table\n    });\n    this.handleClose();\n  }\n\n  handleChange = event => {\n    this.setState({\n      ...this.state,\n      filter: event.target.value,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.table.length > 0 ?\n          <div>\n            <InputLabel>\n              Filter by Name: {' '}\n              <Input type=\"text\" value={this.state.filter} onChange={this.handleChange} />\n            </InputLabel>\n            <Paper>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Play</TableCell>\n                    <TableCell>Manage</TableCell>\n                    <TableCell>Go</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {this.props.table.filter(song => song.name.includes(this.state.filter)).map(song => (\n                    <TableRow key={song.id}>\n                      <TableCell>{song.name}</TableCell>\n                      <TableCell>{song.type}</TableCell>\n                      <TableCell><PlayButton song={song} /></TableCell>\n                      {/* the button below opens the dialog rendered under the table, and sets local state to keep data for that song */}\n                      <TableCell><IconButton color=\"secondary\" onClick={() => this.handleManage(song)}><ViewCarouselSharp /></IconButton></TableCell>\n                      <TableCell><ProjectButton page={song.project_id} /></TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </Paper>\n          </div> :\n          <p>\n            You currently have no songs.\n        </p>}\n        <Dialog open={this.state.manage.open}>{/* this dialog gives the user the ability to delete their own songs */}\n          <Typography variant=\"h4\">Manage {this.state.manage.song && this.state.manage.song.name}</Typography>\n          <IconButton color=\"secondary\" onClick={this.handleDelete}>Delete <DeleteForever /></IconButton>\n          <IconButton color=\"primary\" onClick={this.handleClose}>Cancel <Cancel /></IconButton>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  table: state.table,\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(SongTable);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Songs from '../Tables/SongTable';\n//this component displays all songs the user uploaded\nclass MySongs extends Component {\n  logout = () => {\n    this.props.dispatch({ type: 'LOGOUT' });\n  }\n\n  componentDidMount() {\n    this.props.dispatch({type: 'MY_SONGS', payload: this.props.user.id});\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"welcome\">\n          { this.props.user.username }'s Songs\n        </h1>\n        <Songs />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(MySongs);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProjectButton from '../LinkButtons/ProjectButton';\nimport { Table, TableHead, TableBody, TableRow, TableCell, Input, InputLabel, Paper } from '@material-ui/core';\nimport PlayButton from '../LinkButtons/PlayButton';\n\nclass ProjectTable extends Component {\n\n  state = {\n    filter: '',\n  }\n\n  handleChange = event => {\n    this.setState({\n      filter: event.target.value,\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <InputLabel>\n          Filter by Name: {' '}\n          <Input type=\"text\" value={this.state.filter} onChange={this.handleChange} />\n        </InputLabel>\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Creator</TableCell>\n                <TableCell>Versions</TableCell>\n                <TableCell>Play Head</TableCell>\n                <TableCell>Go</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {this.props.table.filter(project => project.name.includes(this.state.filter)).map(project => (\n                <TableRow key={project.id}>\n                  <TableCell>{project.name}</TableCell>\n                  <TableCell>{project.artist}</TableCell>\n                  <TableCell>{project.versions}</TableCell>\n                  <TableCell>{project.head && <PlayButton song={{ id: project.head }} />}</TableCell>\n                  <TableCell><ProjectButton page={project.id} /></TableCell>\n                </TableRow>\n              ))}{/* this map makes an array of TableRows that are all rendered inside of the TableBody */}\n            </TableBody>\n          </Table>\n        </Paper>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  table: state.table,\n});\n\nexport default connect(mapStateToProps)(ProjectTable);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Projects from '../Tables/ExploreTable'\n\nclass Explore extends Component {\n  \n  componentDidMount(){\n    this.props.dispatch({type: 'PROJECTS'});\n  }\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"welcome\">\n          Explore\n        </h1>\n        <Projects />\n      </div>\n    );\n  }\n}\n\nexport default connect()(Explore);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Input } from '@material-ui/core';\n\nclass ProjectForm extends Component {\n\n    state = {\n        projectName: '',\n    }\n    //the handleChange allows the user to type in the form and change local state\n    handleChange = event => {\n        this.setState({\n            projectName: event.target.value,\n        });\n    }\n\n    handleSubmit = event => {\n        event.preventDefault();\n        this.props.dispatch({ type: 'NEW_PROJECT', payload: { name: this.state.projectName, user: this.props.user.id } });\n        this.setState({\n            projectName: '',\n        });\n        this.props.history.push('/projects');\n    }\n    //on submit, the right saga is triggered to add a new project under the user's name\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <h3>New Project</h3>\n                    <Input onChange={this.handleChange} value={this.state.projectName} type=\"text\" placeholder=\"Name your Project\" required />\n                    <pre>\n                        <Input type=\"submit\" value=\"Add To Your Projects\" />\n                    </pre>\n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ user }) => ({ user });\n\nexport default connect(mapStateToProps)(withRouter(ProjectForm));\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { AudiotrackRounded } from '@material-ui/icons';\n\nconst DownloadFooter = (props) => (\n  <div>\n    {/* if there is a download to get, then the like will exist here */}\n    {props.download.download && <pre><h4>Your download is ready:</h4>\n    <a href={props.download.download} download target=\"_blank\" rel=\"noopener noreferrer\"><AudiotrackRounded /></a></pre>}\n  </div>\n);\n\nconst mapReduxToProps = ({ download }) => ({ download })\n\nexport default connect(mapReduxToProps)(DownloadFooter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport DownloadFooter from '../DownloadFooter/DownloadFooter';\nimport PlayButton from '../LinkButtons/PlayButton';\nimport { Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core';\nimport { IconButton, Dialog, DialogContent, Typography, Paper } from '@material-ui/core';\nimport { CloudDownload, ArrowUpwardOutlined, CancelOutlined, MusicNote, MusicNoteSharp, FileCopy, DeleteForever } from '@material-ui/icons';\n\nclass SongTable extends Component {\n\n  state = {\n    downloadDialog: false,\n  }\n\n  handleChoose = song => {\n    this.props.dispatch({\n      type: 'PROMOTE_SONG', payload: {\n        project: this.props.project_id,\n        song: song.id,\n      }\n    });\n  }\n\n  handleDownload = song => {\n    this.props.dispatch({ type: 'GET_URLS', payload: song.id });\n    this.setState({\n      downloadDialog: true,\n    });\n  }\n\n  handleCancel = () => {\n    this.setState({\n      downloadDialog: false,\n    });\n  }\n\n  handleFile = file => {\n    this.props.dispatch({ type: 'DOWNLOAD_URL', payload: { type: file.type, id: file.id } });\n    this.handleCancel();\n  }\n\n  handleDelete = song => {\n    this.props.dispatch({\n      type: 'DELETE_SONG', payload: {\n        ...song, user_id: this.props.user.id,\n        next: { type: 'PROJECT_SONGS', payload: this.props.project_id },\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div>\n        {this.props.table.length > 0 ?\n          <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Name</TableCell>\n                  <TableCell>Type</TableCell>\n                  <TableCell>Artist</TableCell>\n                  <TableCell>Play</TableCell>{/* only the owner may delete a song or chose a new head from\n              a project page. Better that only they see the buttons. */}\n                  {this.props.owner && <TableCell>Delete</TableCell>}\n                  <TableCell>Download</TableCell>\n                  {this.props.owner && <TableCell>Choose New Head</TableCell>}\n                </TableRow>\n              </TableHead>\n              <TableBody>{/* the head is displayed at the top of the table */}\n                {this.props.table.filter(song => song.type === 'head').map(song => (\n                  <TableRow key={song.id}>\n                    <TableCell>{song.name}</TableCell>\n                    <TableCell>{song.type}</TableCell>\n                    <TableCell>{song.artist}</TableCell>\n                    <TableCell><PlayButton song={song} /></TableCell>\n                    {this.props.owner && <TableCell><IconButton color=\"secondary\" onClick={() => this.handleDelete(song)}><DeleteForever /></IconButton></TableCell>}\n                    <TableCell><IconButton color=\"primary\" onClick={() => this.handleDownload(song)}><CloudDownload /></IconButton></TableCell>\n                  </TableRow>\n                ))}{/* the remixes are displayed below */}\n                {this.props.table.filter(song => song.type !== 'head').map(song => (\n                  <TableRow key={song.id}>\n                    <TableCell>{song.name}</TableCell>\n                    <TableCell>{song.type}</TableCell>\n                    <TableCell>{song.artist || 'anonymous'}</TableCell>\n                    <TableCell><PlayButton song={song} /></TableCell>\n                    {this.props.owner && <TableCell><IconButton color=\"secondary\" onClick={() => this.handleDelete(song)}><DeleteForever /></IconButton></TableCell>}\n                    <TableCell><IconButton color=\"primary\" onClick={() => this.handleDownload(song)}><CloudDownload /></IconButton></TableCell>\n                    {this.props.owner && <TableCell><IconButton color=\"secondary\" onClick={() => this.handleChoose(song)}><ArrowUpwardOutlined /></IconButton></TableCell>}\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Paper> :\n          <p>\n            This project has no songs.\n          </p>}\n        <Dialog open={this.state.downloadDialog}>{/* this dialog shows all files available for download, and offers a button that downloads them */}\n          <Typography variant=\"h4\">Available Downloads</Typography>\n          <DialogContent>\n            {this.props.urls.mp3Status && <pre><IconButton onClick={() => this.handleFile({ type: 'mp3', id: this.props.urls.id })}><MusicNote />Get mp3</IconButton></pre>}\n            {this.props.urls.wavStatus && <pre><IconButton onClick={() => this.handleFile({ type: 'wav', id: this.props.urls.id })}><MusicNoteSharp />Get wav</IconButton></pre>}\n            {this.props.urls.productionStatus && <pre><IconButton onClick={() => this.handleFile({ type: 'production', id: this.props.urls.id })}><FileCopy />Get production file</IconButton></pre>}\n            <IconButton color=\"secondary\" onClick={this.handleCancel}><CancelOutlined />Cancel</IconButton>\n          </DialogContent>\n        </Dialog>\n        <DownloadFooter />\n      </div>\n    );\n  }\n}\n//all of the tables in the Tables folder reference the same reducer\nconst mapStateToProps = state => ({\n  table: state.table,\n  urls: state.url,\n  user: state.user,\n});\n\nexport default connect(mapStateToProps)(SongTable);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Songs from '../Tables/PageTable';\nimport { IconButton, Dialog, Typography, Input, InputLabel } from '@material-ui/core';\nimport { CloudUpload, Cancel } from '@material-ui/icons';\n\nclass ProjectPage extends Component {\n\n  state = {\n    uploadDialog: false,\n    newUpload: {\n      name: '',\n      mp3: '',\n      wav: '',\n      production: '',\n    }\n  }\n\n  addRemix = () => {\n    this.setState({\n      ...this.state,\n      uploadDialog: true,\n    });\n  }\n\n  cancleUpload = () => {\n    this.setState({\n      ...this.state,\n      uploadDialog: false,\n    })\n  }\n//handleChange sets a state to the file put into one of the 3 file inputs\n  handleChange = param => event => {\n    this.setState({\n      ...this.state,\n      newUpload: {\n        ...this.state.newUpload,\n        [param]: event.target.files,\n      }\n    });\n  }\n  handleNameChange = event => {\n    this.setState({\n      ...this.state,\n      newUpload: {\n        ...this.state.newUpload,\n        name: event.target.value,\n      }\n    })\n  }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    this.props.dispatch({ type: 'START_UPLOAD' });\n    this.props.dispatch({\n      type: 'NEW_SONG',\n      payload: { ...this.state.newUpload, project_id: this.props.info.project_id }\n    });\n    this.setState({\n      uploadDialog: false,\n      newUpload: {\n        name: '',\n        mp3: '',\n        wav: '',\n        production: '',\n      }\n    });\n  }\n\n\n  render() {\n    return (\n      <div>\n        <h1 className=\"welcome\">\n          {this.props.info.name}\n        </h1>\n        <h2 className=\"welcome\">Creator: {this.props.info.username}</h2>\n        <Dialog open={this.state.uploadDialog}>\n          <Typography variant=\"h5\">New Remix</Typography>\n          <form onSubmit={this.handleSubmit}>\n            <InputLabel required>Name<Input value={this.state.newUpload.name} onChange={this.handleNameChange} type=\"text\" required /></InputLabel>\n            <InputLabel required>mp3<Input accept=\".mp3\" name=\"mp3\" files={this.state.newUpload.mp3} onChange={this.handleChange('mp3')} type=\"file\" required /></InputLabel>\n            <InputLabel>wav<Input name=\"wav\" accept=\".wav\" files={this.state.newUpload.wav} onChange={this.handleChange('wav')} type=\"file\" /></InputLabel>\n            <InputLabel>production file (zip)<Input accept=\".zip\" name=\"production\" files={this.state.newUpload.production} onChange={this.handleChange('production')} type=\"file\" /></InputLabel>\n            <Input type=\"submit\" value=\"upload files\" />\n          </form>\n          <IconButton color=\"secondary\" onClick={this.cancleUpload}><Cancel />Cancle</IconButton>\n        </Dialog>\n        <Songs project_id={this.props.info.project_id}\n          owner={this.props.user.username === this.props.info.username} />\n        <IconButton color=\"primary\" onClick={this.addRemix}><CloudUpload /> Add Remix</IconButton>\n        {/* this button opens the above dialog */}\n      </div>\n    );\n  }\n}\n\n// Instead of taking everything from state, we just want the user info.\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({user}) => ({ user });\nconst mapStateToProps = state => ({\n  info: state.info,\n  user: state.user,\n});\n\n// this allows us to use <App /> in index.js\nexport default connect(mapStateToProps)(ProjectPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport './ActiveAudio.css';\n\nconst ActiveAudio = props => {\n    return (\n        <div>\n            {/*if there is a current download, the audio tag is rendered to play it*/}\n            {props.download.current &&\n                <audio controls src={props.download.current} autoPlay></audio>}\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ download }) => ({ download });\n\nexport default connect(mapStateToProps)(ActiveAudio);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Typography, IconButton } from '@material-ui/core';\nimport { CheckCircle, Error } from '@material-ui/icons';\n\nconst UploadDialog = props => {\n    return (\n        <div>\n            <Dialog open={props.messages.uploading}>\n                <Typography variant=\"h4\">Processing</Typography>\n                <Typography variant=\"body1\">\n                Your upload is being processed. Your patience is mandatory.\n                </Typography>\n            </Dialog>\n            <Dialog open={props.messages.uploadingComplete}>\n                <Typography variant=\"h4\">Success</Typography>\n                <Typography variant=\"body1\">Your upload is successful.</Typography>\n                <IconButton onClick={() => props.dispatch({ type: 'CONFIRM_UPLOAD' })}>\n                    <CheckCircle />Excellent\n                </IconButton>\n            </Dialog>\n            <Dialog open={props.messages.uploadError}>\n                <Typography variant=\"h4\">Failure</Typography>\n                <Typography variant=\"body1\">\n                    Something foul has occured! Please forgive Music Hub.\n                </Typography>\n                <IconButton onClick={() => props.dispatch({ type: 'CONFIRM_ERROR' })}>\n                    <Error />Nooo!\n                </IconButton>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ messages }) => ({ messages });\n\nexport default connect(mapStateToProps)(UploadDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Typography, IconButton } from '@material-ui/core';\nimport { Error } from '@material-ui/icons';\n\nconst DownloadDialog = props => {\n    return (\n        <div>\n            <Dialog open={props.messages.downloading}>\n                <Typography variant=\"h4\">Processing</Typography>\n                <Typography variant=\"body1\">\n                    Downloading content.\n                </Typography>\n            </Dialog>\n            <Dialog open={props.messages.downloadError}>\n                <Typography variant=\"h4\">Failure</Typography>\n                <Typography variant=\"body1\">\n                    Something foul has occured! Please forgive Music Hub.\n                </Typography>\n                <IconButton onClick={() => props.dispatch({ type: 'CONFIRM_DOWNLOAD_ERROR' })}>\n                    <Error />Nooo!\n                </IconButton>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ messages }) => ({ messages });\n\nexport default connect(mapStateToProps)(DownloadDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Typography, IconButton } from '@material-ui/core';\nimport { CheckCircle, Error } from '@material-ui/icons';\n\nconst DeleteProjectDialog = props => {\n    return (\n        <div>\n            <Dialog open={props.messages.projectDeleting}>\n                <Typography variant=\"h4\">Processing</Typography>\n                <Typography variant=\"body1\">\n                    Your entire project is being deleted.\n                </Typography>\n            </Dialog>\n            <Dialog open={props.messages.projectDeletingComplete}>\n                <Typography variant=\"h4\">Success</Typography>\n                <Typography variant=\"body1\">You have deleted a project. I hope you're happy.</Typography>\n                <IconButton onClick={() => props.dispatch({ type: 'PROJECT_FINISH_DELETE' })}>\n                    <CheckCircle />I Regret Nothing\n                </IconButton>\n            </Dialog>\n            <Dialog open={props.messages.projectDeletingError}>\n                <Typography variant=\"h4\">Failure</Typography>\n                <Typography variant=\"body1\">\n                    Something foul has occured! Please forgive Music Hub.\n                </Typography>\n                <IconButton onClick={() => props.dispatch({ type: 'PROJECT_CONFIRM_ERROR' })}>\n                    <Error />Nooo!\n                </IconButton>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = ({ messages }) => ({ messages });\n\nexport default connect(mapStateToProps)(DeleteProjectDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Typography, IconButton } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\n\nconst LoginDialog = props => {\n    return (\n        <div>\n            <Dialog open={props.messages.loginError}>\n                <Typography variant=\"h4\">Fatal Error</Typography>\n                <Typography variant=\"body1\">{props.error}</Typography>\n                <IconButton onClick={() => props.dispatch({ type: 'CLEAR_LOGIN_ERROR'})}><ArrowBack/> Okay</IconButton>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({ messages: state.messages, error: state.errors.loginMessage });\n\nexport default connect(mapStateToProps)(LoginDialog);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Dialog, Typography, IconButton } from '@material-ui/core';\nimport { ArrowBack } from '@material-ui/icons';\n\nconst RegisterDialog = props => {\n    return (\n        <div>\n            <Dialog open={props.messages.registrationError}>\n                <Typography variant=\"h4\">Fatal Error</Typography>\n                <Typography variant=\"body1\">{props.error}</Typography>\n                <IconButton onClick={() => props.dispatch({ type: 'CLEAR_REGISTRATION_ERROR'})}><ArrowBack/> Okay</IconButton>\n            </Dialog>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({ messages: state.messages, error: state.errors.registrationMessage });\n\nexport default connect(mapStateToProps)(RegisterDialog);\n","import React from 'react';\nimport UploadDialog from './UploadDialog';\nimport DownloadDialog from './DownloadDialog';\nimport DeleteProjectDialog from './DeleteProjectDialog';\nimport LoginDialog from './LoginDialog';\nimport RegistrationDialog from './RegisterDialog';\n//sort of like an index.js, all the dialogues are put here, and opened when needed\n//their primary purpose is to prevent the user from mucking around when important\n//things are happening, like the transfering of files.\n//they are opened and closed wherever they are needed, such as in a saga, or button click\nconst Dialogs = props => {\n    return (\n        <div>\n            <UploadDialog/>\n            <DownloadDialog/>\n            <DeleteProjectDialog/>\n            <LoginDialog/>\n            <RegistrationDialog/>\n        </div>\n    );\n}\n\nexport default Dialogs;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Paper, IconButton, Button } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport './notifications.css';\n\nclass NotificationPage extends Component {\n\n    handleDelete = id => {\n        this.props.dispatch({ type: 'DELETE_NOTIFICATION', payload: id });\n    }\n\n    handleClear = () => {\n        this.props.dispatch({ type: 'CLEAR_NOTIFICATIONS' });\n    }\n\n    render() {\n        return (\n            <div>\n                <h1 className=\"welcome\">\n                    Notifications\n                </h1>\n                <div className=\"outerDiv\">\n                    <Button color=\"secondary\" variant=\"contained\" onClick={this.handleClear} disabled={this.props.notifications.length === 0}>Clear All</Button>\n                    <Paper>\n                        <div className=\"innerDiv\">\n                            {this.props.notifications.length > 0 ? \n                            <ul className=\"notificationsList\">\n                                {this.props.notifications.map(notification => (\n                                    <li key={notification.id}>\n                                    <IconButton onClick={() => this.handleDelete(notification.id)}>\n                                        <Delete />\n                                    </IconButton>\n                                    {notification.content}\n                                    </li>\n                                ))}\n                            </ul> :\n                                <p>\n                                    You have no new notifications.\n                                </p>\n                            }\n                        </div>\n                    </Paper>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ notifications }) => ({\n    notifications\n});\n\nexport default connect(mapStateToProps)(NotificationPage);\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport { connect } from 'react-redux';\nimport { createMuiTheme, MuiThemeProvider, Grid } from '@material-ui/core';\nimport Nav from '../Nav/Nav';\n\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\nimport AboutPage from '../AboutPage/AboutPage';\nimport UserPage from '../UserPage/UserPage';\nimport InfoPage from '../InfoPage/InfoPage';\nimport MyProjects from '../MyProjects/MyProjects';\nimport MySongs from '../MySongs/MySongs';\nimport Explore from '../Explore/Explore';\nimport ProjectForm from '../ProjectForm/ProjectForm';\nimport ProjectPage from '../ProjectPage/ProjectPage';\nimport ActiveAudio from '../ActiveAudio/ActiveAudio';\nimport Dialogs from '../Dialogs/AllDialogs';\nimport NotificationPage from '../NotificationPage/NotificationPage';\nimport { lightBlue, deepPurple, blueGrey } from '@material-ui/core/colors';\n\nimport './App.css';\n//the theme chooses colors for the application. The typography section allows the\n//application to use the more up to date typography.\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: lightBlue,\n    secondary: blueGrey,\n    error: deepPurple,\n  },\n});\n\nclass App extends Component {\n  componentDidMount() {\n    //sees if there is existing user data stored in the browser, and automatically\n    //sends in that username and password.\n    this.props.dispatch({ type: 'FETCH_USER' });\n    this.props.dispatch({ type: 'GET_NOTIFICATIONS' });\n  }\n\n  render() {\n    return (\n      //the theme wraps everything so that all may have access to the colors.\n      <MuiThemeProvider theme={theme}>\n        {/* the router tag wraps all routes that show up on the dom */}\n        <Router>\n          <Grid container>\n            <Grid container direction=\"column\" sm={2} item>\n              <Nav />\n            </Grid>\n            <Grid container direction=\"column\" sm={10} item>\n              {/* the nav bar goes here */}\n              <Switch>\n                <Redirect exact from=\"/\" to=\"/home\" />\n                <Route\n                  exact\n                  path=\"/about\"\n                  component={AboutPage}\n                />\n                <Route\n                  exact\n                  path=\"/explore\"\n                  component={Explore}\n                />\n                {/* \"protected\" routes are only available for a logged in user.\n            A user probably wouldn't appreciate all the 403s from visiting these pages\n            when not logged in. */}\n                <ProtectedRoute\n                  exact\n                  path=\"/home\"\n                  component={UserPage}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/newProject\"\n                  component={ProjectForm}\n                />\n                <Route\n                  exact\n                  path=\"/info\"\n                  component={InfoPage}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/projects\"\n                  component={MyProjects}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/songs\"\n                  component={MySongs}\n                />\n                <ProtectedRoute\n                  exact\n                  path=\"/notifications\"\n                  component={NotificationPage}\n                />\n                <Route\n                  exact\n                  path=\"/explore\"\n                  component={Explore}\n                />\n                <Route\n                  path=\"/explore/:id\"\n                  component={ProjectPage}\n                />\n                {/* If none of the other routes matched, we will show a 404. */}\n                <Route render={() => <h1>404</h1>} />\n              </Switch>\n              <ActiveAudio />\n              {/* here lie many dialogs that are managed by redux state */}\n              <Dialogs />\n            </Grid>\n          </Grid>\n        </Router>\n      </MuiThemeProvider>\n    )\n  }\n}\n\nexport default connect()(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}